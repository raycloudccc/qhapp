<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.noname.qh.dao.TeacherDao">
    <resultMap id="resultMap" type="com.noname.qh.entity.Teacher">
        <result property="teacherId" column="teacher_id"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
        <result property="gender" column="gender"/>
        <result property="tele" column="tele"/>
        <result property="email" column="email"/>
        <result property="wxh" column="wxh"/>
        <result property="address" column="address"/>
        <result property="subId" column="sub_id"/>
        <result property="status" column="status"/>
        <result property="memo" column="memo"/>
        <result property="createtime" column="createtime"/>
    </resultMap>
    <parameterMap id="parameterMap" type="com.noname.qh.entity.Teacher">
        <parameter property="teacherId" resultMap="resultMap"/>
        <parameter property="name" resultMap="resultMap"/>
        <parameter property="age" resultMap="resultMap"/>
        <parameter property="gender" resultMap="resultMap"/>
        <parameter property="tele" resultMap="resultMap"/>
        <parameter property="email" resultMap="resultMap"/>
        <parameter property="wxh" resultMap="resultMap"/>
        <parameter property="address" resultMap="resultMap"/>
        <parameter property="subId" resultMap="resultMap"/>
        <parameter property="status" resultMap="resultMap"/>
        <parameter property="memo" resultMap="resultMap"/>
        <parameter property="createtime" resultMap="resultMap"/>
    </parameterMap>

    <sql id="columnSql">
            t.teacher_id,
            t.name,
            t.age,
            t.gender,
            t.tele,
            t.email,
            t.wxh,
            t.address,
            t.status,
            t.memo,
            t.createtime
    </sql>


    <insert id="insertTeacher" parameterMap="parameterMap">
        INSERT INTO teacher (
        name,age,gender,tele,email,wxh,address,status,memo,createtime
        )
        VALUES (#{name},#{age},#{gender},#{tele},#{email},#{wxh},#{address},#{status},#{memo},#{createtime})
        <selectKey keyProperty="teacherId" order="AFTER" resultType="long">
            select last_insert_id()
        </selectKey>
    </insert>

    <select id="listTeacher" resultMap="resultMap" parameterType="java.util.Map">
        SELECT
        <include refid="columnSql"/>
        FROM teacher t
        WHERE t.status=#{status}
        <if test="name=='name' and value!='%%'">AND ${name} LIKE #{value}</if>
        ORDER BY t.createtime
        LIMIT #{start},#{end}
    </select>

    <select id="countTeacher" parameterType="java.util.Map" resultType="int">
        SELECT COUNT(*) FROM teacher WHERE status=#{status}
        <if test="name=='name' and value!='%%'">AND name LIKE #{value}</if>
    </select>

    <select id="allSub" resultType="com.noname.qh.entity.Subject">
        SELECT sub_id subId,sub_name subName,create_time createtime FROM subject
    </select>

    <select id="selectTeacherById" parameterType="Long" resultMap="resultMap">
        SELECT
        <include refid="columnSql"/>
        FROM teacher t
        WHERE t.teacher_id=#{_parameter}
    </select>

    <update id="updateTeacher" parameterType="com.noname.qh.entity.Teacher">
        UPDATE teacher SET name=#{name},age=#{age},gender=#{gender},tele=#{tele},email=#{email},wxh=#{wxh},address=#{address},
        memo=#{memo} WHERE teacher_id=#{teacherId}
    </update>

    <update id="deleteTeacher" parameterType="java.util.Map">
        update teacher set status=#{status} where teacher_id=#{teacherid}
    </update>

    <select id="getSubInfo" parameterType="java.util.Map" resultType="com.noname.qh.entity.SubjectRelation">
        SELECT a.rela_id relaId,a.obj_id objId,a.sub_id subId,a.sub_flag subFlag,a.create_time createtime ,b.sub_name subName FROM subject_relation AS a
        LEFT JOIN subject AS b
        ON a.sub_id=b.sub_id
        WHERE a.obj_id=#{teacherid} AND a.sub_flag=#{flag}
    </select>

    <select id="countTeacherBySub" parameterType="java.util.Map" resultType="int">
        SELECT COUNT(*) FROM subject_relation AS a
        LEFT JOIN subject AS b
        ON a.sub_id=b.sub_id
        WHERE b.sub_name LIKE #{subName} AND a.sub_flag=#{flag}
    </select>

    <select id="getTeacherListBySubName" parameterType="java.util.Map" resultType="long">
        SELECT a.obj_id FROM subject_relation AS a
        LEFT JOIN subject AS b
        ON a.sub_id=b.sub_id
        WHERE b.sub_name LIKE #{value} AND a.sub_flag=#{flag}
    </select>

    <insert id="insertSubjectRelation" parameterType="com.noname.qh.entity.SubjectRelation">
        INSERT INTO subject_relation (obj_id,sub_id,sub_flag,create_time) VALUES(#{objId},#{subId},#{subFlag},#{createtime})
    </insert>

    <delete id="deleteSubjectRelation" parameterType="java.util.Map">
        delete from subject_relation where obj_id=#{teacherId} and sub_flag=#{subFlag}
    </delete>
    
    <select id="listAllValidTeachers" resultMap="resultMap" parameterType="int">
        select <include refid="columnSql"/> from teacher t where status=#{status} order by createtime
    </select>

</mapper>
